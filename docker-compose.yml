version: "3.8"

services:
  ifrc-frontend:
    build: ./frontend
    container_name: test-frontend
    hostname: test-frontend
    ports:
      - "3004:3004"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - test-network
    stdin_open: true
    tty: true

  ifrc-backend:
    build: ./backend
    container_name: test-backend
    hostname: test-backend
    ports:
      - "4001:4001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
    env_file:
      - ./backend/.env.development
    networks:
      - test-network
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    restart: on-failure
    volumes:
      - ./db-init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongoDB:/data/db
    networks:
      - test-network
    environment:
      MONGO_INITDB_DATABASE: test
      MONGO_INITDB_USER: test
      MONGO_INITDB_PASSWORD: test123

  mongoexpress:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: test
      ME_CONFIG_MONGODB_ADMINPASSWORD: test
      ME_CONFIG_MONGODB_URL: mongodb://test:test123@mongodb/test
    networks:
      - test-network

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    restart: always
    networks:
      - test-network

volumes:
  mongoDB:

networks:
  ifrc-network:
    driver: bridge
